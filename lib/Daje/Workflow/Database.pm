package Daje::Workflow::Database;
use Mojo::Base -base, -signatures;


# NAME
# ====
#
# Daje::Workflow::Database - It's new $module
#
# SYNOPSIS
# ========
#
#    use Daje::Workflow::Database;
#
# DESCRIPTION
# ===========
#
# Daje::Workflow::Database is ...
#
# LICENSE
# =======
#
# Copyright (C) janeskil1525.
#
# This library is free software; you can redistribute it and/or modify
# it under the same terms as Perl itself.
#
# AUTHOR
# ======
#
# janeskil1525 E<lt>janeskil1525@gmail.comE<gt>
#

use Mojo::Pg;
use Daje::Workflow::Database::Model::Workflow;
use Daje::Workflow::Database::Model::Context;

our $VERSION = "0.01";

has 'db';
has 'config';
has 'workflow_pkey';

sub load($self, $workflow_pkey) {
    my $data->{workflow} = $self->load_workflow($workflow_pkey);
    $data->{context} = $self->load_context($workflow_pkey);
    return $data;
}

sub save($self, $workflow_data, $context_data) {
    my $workflow_pkey = $self->save_workflow($workflow_data);
    $self->save_context($workflow_pkey, $context_data);

}

sub load_workflow($self, $workflow_pkey) {
    my $data = Daje::Workflow::Database::Model::Workflow->new(
        db => $self->pg
    )->load(
        $workflow_pkey
    );
    return $data;
}

sub load_context($self) {

}

sub save_context($self, $workflow_pkey, $data) {

}

sub save_workflow($self, $data) {
    my $workflow_pkey = Daje::Workflow::Database::Model::Workflow->new(
        db => $self->pg
    )->save(
        $data
    );
    return $workflow_pkey;
}
1;
__END__






#################### pod generated by Pod::Autopod - keep this line to make pod updates possible ####################

=head1 NAME


Daje::Workflow::Database - It's new $module



=head1 SYNOPSIS


   use Daje::Workflow::Database;



=head1 DESCRIPTION


Daje::Workflow::Database is ...



=head1 REQUIRES

L<Mojo::Base> 


=head1 METHODS


=head1 AUTHOR


janeskil1525 E<lt>janeskil1525@gmail.comE<gt>



=head1 LICENSE


Copyright (C) janeskil1525.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.



=cut

